# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

#name: Java CI with Maven
#on: push
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    env:
#      DB_DATABASE: coffee
#      DB_USER: Ivaska
#      DB_PASSWORD: password
#    steps:
#      - name: Set up MySQL
#        run: |
#          sudo /etc/init.d/mysql start
#          mysql -e 'CREATE DATABASE coffee;' -u Ivaska -ppassword

#name: Java CI with Maven
#on:
#  pull_request:
#    branches:
#      - '*'
#  push:
#    branches:
#      - 'master'

name: Name

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Maven Package
        run: mvn -B clean package -DskipTests
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v1
      - name: Deploy
        uses: aptible/aptible-deploy-action@v1
        with:
          username: ${{ secrets.APTIBLE_USERNAME }}
          password: ${{ secrets.APTIBLE_PASSWORD }}
          environment: ${{ env.APTIBLE_ENVIRONMENT }}
          app: ${{ env.APTIBLE_APP }}
          docker_img: ${{ env.IMAGE_NAME }}
          private_registry_username: ${{ secrets.DOCKERHUB_USERNAME }}
          private_registry_password: ${{ secrets.DOCKERHUB_TOKEN }}



#name: Java CI with Maven
#
#env:
#  APPLICATION_NAME: "MyFlask"
#  DEPLOY_PACKAGE_NAME: "flask-deploy-ver-${{ github.sha }}" # ${{ github.sha }} commit id
#
#on: push
#
#jobs:
#  my_testng:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Print Hello message
#        run: echo "Hello World testing"
#      - name: Git clone my repo
#        uses: actions/checkout@v1
#  my_deploy:
#    runs-on: ubuntu-latest
#    needs: [my_testng]
#    steps:
#      - name: Print Hello message
#        run: echo "Hello World testing"